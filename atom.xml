<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Wenbing Li]]></title>
  <link href="http://wbinglee.com/atom.xml" rel="self"/>
  <link href="http://wbinglee.com/"/>
  <updated>2017-09-08T13:32:25-07:00</updated>
  <id>http://wbinglee.com/</id>
  <author>
    <name><![CDATA[Wenbing Li]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Cucumber Best Practices]]></title>
    <link href="http://wbinglee.com/blog/2015/01/21/cucumber-best-practices/"/>
    <updated>2015-01-21T09:14:44+13:00</updated>
    <id>http://wbinglee.com/blog/2015/01/21/cucumber-best-practices</id>
    <content type="html"><![CDATA[<p><a href="http://cukes.info/">cucumber</a> is a BDD(Behaviour driver development) framework. Basically test cases are written in plain text which is called Gherkin language, just in Given-When-Then steps. After that, developer will write implementation for those steps.</p>

<p>It&rsquo;s good to bridge the communication between business requirement and implementation. The ideal work flow would be business analysis or QA write features and developer implements them. However, in a real world, developer write both of them. Cucumber is different programming model than what we normmaly use like Java, ruby, etc. It is not mature enough like OO which has tons of patterns and best practices to apply.</p>

<p>Below are some best practices when I use cucumber for one project.</p>

<h2>Write declarative features</h2>

<p>Scenarios should be written like a user would describe them.</p>

<p>Beware of scenarios that only describe clicking links and filling in form fields, or of steps that contain code or CSS selectors. This is just another variant of programming, but certainly not a feature description.</p>

<p><strong>Bad</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='Cucumber'><span class='line'><span class="k">Scenario:</span><span class="nf"> Adding a todo item</span>
</span><span class='line'><span class="k">    Given </span><span class="nf">I have a todo list named &quot;</span><span class="s">Mondays list</span><span class="nf">&quot;</span>
</span><span class='line'><span class="nf">    </span><span class="k">When </span><span class="nf">I go to the home page</span>
</span><span class='line'><span class="nf">    </span><span class="k">And </span><span class="nf">I fill in &quot;</span><span class="s">username</span><span class="nf">&quot; with &quot;</span><span class="s">dave</span><span class="nf">&quot;</span>
</span><span class='line'><span class="nf">    </span><span class="k">And </span><span class="nf">I fill in &quot;</span><span class="s">password</span><span class="nf">&quot; with &quot;</span><span class="s">secret</span><span class="nf">&quot;</span>
</span><span class='line'><span class="nf">    </span><span class="k">And </span><span class="nf">I press &quot;</span><span class="s">Log In</span><span class="nf">&quot;</span>
</span><span class='line'><span class="nf">    </span><span class="k">And </span><span class="nf">I go to the todo page</span>
</span><span class='line'><span class="nf">    </span><span class="k">And </span><span class="nf">I click on link &quot;</span><span class="s">Mondays list</span><span class="nf">&quot;</span>
</span><span class='line'><span class="nf">    </span><span class="k">And </span><span class="nf">I fill in &quot;</span><span class="s">todo</span><span class="nf">&quot; with &quot;</span><span class="s">Grab some milk</span><span class="nf">&quot;</span>
</span><span class='line'><span class="nf">    </span><span class="k">And </span><span class="nf">I press &quot;</span><span class="s">Add todo</span><span class="nf">&quot;</span>
</span><span class='line'><span class="nf">    </span><span class="k">Then </span><span class="nf">I should see &quot;</span><span class="s">Todo item added successfully</span><span class="nf">&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Good</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='Cucumber'><span class='line'><span class="k">Scenario:</span><span class="nf"> Adding a todo item</span>
</span><span class='line'><span class="k">    Given </span><span class="nf">I have a todo list</span>
</span><span class='line'><span class="nf">    </span><span class="k">And </span><span class="nf">I am logged in as a normal user</span>
</span><span class='line'><span class="nf">    </span><span class="k">When </span><span class="nf">I add a todo item</span>
</span><span class='line'><span class="nf">    </span><span class="k">Then </span><span class="nf">It should be added to the todo list</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Use <code>As a &lt;role&gt;, I want &lt;goal/desire&gt; So that &lt;benefit&gt;</code> format for feature description</h2>

<p>Describe feature in user story style. Starts the feature and gives it a title, then follow with user story format.</p>

<p><strong>Bad</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='Cucumber'><span class='line'><span class="k">Feature:</span><span class="nf"> Create an account</span>
</span><span class='line'>
</span><span class='line'><span class="nf">  </span><span class="k">Scenario:</span><span class="nf"> ...</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Good</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='Cucumber'><span class='line'><span class="k">Feature:</span><span class="nf"> Create an account</span>
</span><span class='line'><span class="nf">  As a user</span>
</span><span class='line'><span class="nf">  I want to create an account for me</span>
</span><span class='line'><span class="nf">  So that I can re-login to the same account</span>
</span><span class='line'>
</span><span class='line'><span class="nf">  </span><span class="k">Scenario:</span><span class="nf"> ...</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Use <code>should</code> in each <code>Then</code> and following <code>And</code> steps</h2>

<p>The purpose of <code>Then</code> steps is to observe outcomes and verify result. Using <code>should</code> word as a convention makes it easy to understand, and make sure do verification in implementation step.</p>

<p><strong>Bad</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='Cucumber'><span class='line'><span class="k">Then </span><span class="nf">My job is displayed in the table</span>
</span></code></pre></td></tr></table></div></figure>


<p><em>*Good</em></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='Cucumber'><span class='line'><span class="k">Then </span><span class="nf">My job should be displayed in the table</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Capitalize first letter of every step</h2>

<p>Each step is independant, capitalize first letter makes a nice format.</p>

<p><strong>Bad</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='Cucumber'><span class='line'><span class="k">Then </span><span class="nf">my job should be displayed in the table</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Good</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='Cucumber'><span class='line'><span class="k">Then </span><span class="nf">My job should be displayed in the table</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Use page object model</h2>

<p>Don&rsquo;t write implementation in step definition, use page object model.</p>

<p><strong>Bad</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">When</span><span class="p">(</span><span class="sr">/^I search for my job$/</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">visit</span> <span class="n">path_to</span><span class="p">(</span><span class="s1">&#39;manage jobs&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">find</span><span class="p">(</span><span class="s1">&#39;a&#39;</span><span class="p">,</span> <span class="ss">:text</span> <span class="o">=&gt;</span> <span class="s1">&#39;Filter Jobs&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">click</span>
</span><span class='line'>  <span class="n">fill_in</span><span class="p">(</span><span class="s1">&#39;users-id-search&#39;</span><span class="p">,</span> <span class="ss">:with</span><span class="o">=&gt;</span><span class="s2">&quot;&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">page</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="s1">&#39;#users-id-search&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">native</span><span class="o">.</span><span class="n">send_keys</span><span class="p">(</span><span class="ss">:backspace</span><span class="p">)</span>
</span><span class='line'>  <span class="n">fill_in</span><span class="p">(</span><span class="s1">&#39;requisition.title&#39;</span><span class="p">,</span> <span class="ss">:with</span> <span class="o">=&gt;</span> <span class="vi">@job</span><span class="o">.</span><span class="n">title</span><span class="p">)</span>
</span><span class='line'>  <span class="n">click_button</span><span class="p">(</span><span class="s1">&#39;Search&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Good</strong></p>

<p><em>job_steps.rb</em></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">When</span><span class="p">(</span><span class="sr">/^I search for my job$/</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>  <span class="vi">@app</span><span class="o">.</span><span class="n">manage_job_page</span><span class="o">.</span><span class="n">load</span>
</span><span class='line'>  <span class="vi">@app</span><span class="o">.</span><span class="n">manage_job_page</span><span class="o">.</span><span class="n">search</span> <span class="vi">@job</span><span class="o">.</span><span class="n">title</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><em>manage_job_page.rb</em></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">search</span><span class="p">(</span><span class="n">job_title</span><span class="p">)</span>
</span><span class='line'>  <span class="n">find</span><span class="p">(</span><span class="s1">&#39;a&#39;</span><span class="p">,</span> <span class="ss">:text</span> <span class="o">=&gt;</span> <span class="s1">&#39;Filter Jobs&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">click</span>
</span><span class='line'>  <span class="n">fill_in</span><span class="p">(</span><span class="s1">&#39;users-id-search&#39;</span><span class="p">,</span> <span class="ss">:with</span><span class="o">=&gt;</span><span class="s2">&quot;&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">page</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="s1">&#39;#users-id-search&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">native</span><span class="o">.</span><span class="n">send_keys</span><span class="p">(</span><span class="ss">:backspace</span><span class="p">)</span>
</span><span class='line'>  <span class="n">fill_in</span><span class="p">(</span><span class="s1">&#39;requisition.title&#39;</span><span class="p">,</span> <span class="ss">:with</span> <span class="o">=&gt;</span> <span class="vi">@job</span><span class="o">.</span><span class="n">title</span><span class="p">)</span>
</span><span class='line'>  <span class="n">click_button</span><span class="p">(</span><span class="s1">&#39;Search&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Use background</h2>

<p>If all the scenario in one feature file have the same steps, put them in the background.</p>

<p><strong>Bad</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='Cucumber'><span class='line'><span class="k">Scenario:</span><span class="nf"> Foo</span>
</span><span class='line'><span class="k">  Given </span><span class="nf">I am logged in as an admin</span>
</span><span class='line'><span class="nf">  </span><span class="k">And </span><span class="nf">....</span>
</span><span class='line'>
</span><span class='line'><span class="k">Scenario:</span><span class="nf"> Bar</span>
</span><span class='line'><span class="k">  Given </span><span class="nf">I am logged in as an admin</span>
</span><span class='line'><span class="nf">  </span><span class="k">And </span><span class="nf">....</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Good</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='Cucumber'><span class='line'><span class="k">Background:</span><span class="nf"></span>
</span><span class='line'><span class="k">  Given </span><span class="nf">I am logged in as an admin</span>
</span><span class='line'>
</span><span class='line'><span class="k">Scenario:</span><span class="nf"> Foo</span>
</span><span class='line'><span class="k">  Given </span><span class="nf">....</span>
</span><span class='line'>
</span><span class='line'><span class="k">Scenario:</span><span class="nf"> Bar</span>
</span><span class='line'><span class="k">  Given </span><span class="nf">....</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Use Tags</h2>

<p>Tags are a great way to organise your features and scenarios.</p>

<p><strong>Good</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='Cucumber'><span class='line'><span class="nt">@job</span><span class="nf"> </span><span class="nt">@smoke</span><span class="nf"></span>
</span><span class='line'><span class="k">Feature:</span><span class="nf"> Job management</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Avoid to use step params</h2>

<p>Step params is a smell which the feature is not declarative.</p>

<p>The parameter in feature should <strong>not</strong> be used as <strong>implementation parameter</strong>.</p>

<p><strong>Bad</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='Cucumber'><span class='line'><span class="k">Given </span><span class="nf">I complete registration from using email &quot;</span><span class="s">test@example.com</span><span class="nf">&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Good</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='Cucumber'><span class='line'><span class="k">Given </span><span class="nf">I complete registration form using a valid email</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Avoid to use scenario outlines</h2>

<p>A Scenario Outline provides a parametrized scenario script. However, it easily become an anti-pattern if you use it too many.</p>

<p>Each scenario with example actually means a different scenario. It&rsquo;s better to <strong>use scenario with a meaningful name</strong> instead of using scenario example.</p>

<p>Scenario outlines uses step params, which should avoid to use.</p>

<p>Beware of feature that only has one scenario but have a long list of examples. It could be a smell that too many different scenario are put together.</p>

<h2>Avoid to use data tables</h2>

<p>Data tables provides data for implementation. It is against the rule of feature should be declarative and business focus.</p>

<p>Feature should not provide any detail implementation or data for testing.</p>

<h2>Use Capybara <code>find</code> whenever possible</h2>

<p><code>find</code> will wait for a set amount of time and continuously retry finding the element until either the element is found or the time expires.</p>

<p><strong>Bad</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">first</span><span class="p">(</span><span class="s2">&quot;.active&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">click</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Good</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">find</span><span class="p">(</span><span class="s2">&quot;.active&quot;</span><span class="p">,</span> <span class="ss">match</span><span class="p">:</span> <span class="ss">:first</span><span class="p">)</span><span class="o">.</span><span class="n">click</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Atom Editor in Ubuntu]]></title>
    <link href="http://wbinglee.com/blog/2014/05/14/using-atom-editor-in-ubuntu/"/>
    <updated>2014-05-14T11:01:26+12:00</updated>
    <id>http://wbinglee.com/blog/2014/05/14/using-atom-editor-in-ubuntu</id>
    <content type="html"><![CDATA[<p><a href="atom.io">Atom</a> is a new editor from github.com, which is very similar to Sublime. It&rsquo;s written using nodejs, coffeescript and less. And it&rsquo;s <strong>opensource</strong>. It makes lots of potentials for the future of the editor.</p>

<p>However, atom does not provide a Linux package yet. As it&rsquo;s opensource, we can build from source.</p>

<h2>Build Atom Editor for Ubuntu 14.04</h2>

<p>From <a href="https://github.com/atom/atom">atom github repo</a> you can find the <a href="https://github.com/atom/atom/blob/master/docs/build-instructions/linux.md">Linux installation guide</a>. Basically just following this guide should be OK.</p>

<p>The only problem I met is <strong>node-gyp rebuild</strong> issue. It&rsquo;s because of the <strong>gyp</strong> installed in your machine which is conflicting with gyp version in node-gyp.</p>

<p>Simple solution is :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo apt-get remove gyp
</span></code></pre></td></tr></table></div></figure>


<p>After that, you will find a .deb atom file under <em>/tmp/atom-build</em> folder. Then install it :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> /tmp/atom-build
</span><span class='line'>sudo dpkg -i atom-0.95.0-amd64.deb
</span></code></pre></td></tr></table></div></figure>


<p>Now you can open it by command <code>atom</code>.</p>

<h2>Configure keybindings for Ubuntu</h2>

<p>Most of the keybindings in atom are for Mac OS. You can add your own keys in key map file <code>~/.atom/keymap.cson</code>. There are some basic hotkeys I have added for Ubuntu:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="s1">&#39;.editor&#39;</span>:
</span><span class='line'>    <span class="s1">&#39;ctrl-l&#39;</span>: <span class="s1">&#39;editor:select-line&#39;</span>
</span><span class='line'>    <span class="s1">&#39;ctrl-d&#39;</span>: <span class="s1">&#39;find-and-replace:select-next&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="s1">&#39;body&#39;</span>:
</span><span class='line'>  <span class="s1">&#39;ctrl-pagedown&#39;</span>: <span class="s1">&#39;pane:show-next-item&#39;</span>
</span><span class='line'>  <span class="s1">&#39;ctrl-pageup&#39;</span>: <span class="s1">&#39;pane:show-previous-item&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Check the source code e.g. <a href="https://github.com/atom/atom/blob/master/src/editor-view.coffee">edit-view.coffee</a> for available commands you can use.</p>

<p>Happy hacking!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Only Allow GET for Specified Request Path Using Mod Security]]></title>
    <link href="http://wbinglee.com/blog/2014/03/25/only-allow-get-for-specified-request-path-using-mod-security/"/>
    <updated>2014-03-25T17:47:06+13:00</updated>
    <id>http://wbinglee.com/blog/2014/03/25/only-allow-get-for-specified-request-path-using-mod-security</id>
    <content type="html"><![CDATA[<h2>Mod Security</h2>

<p>Recently we want to directly use couchdb REST API. But only expose GET REST API so the data could be safe for the public.</p>

<p>A simple mod security rule do this trick:</p>

<pre><code>SecRule REQUEST_URI "/database" "chain,log,deny,status:403,phase:2,id:1234567010"
SecRule REQUEST_METHOD "!@rx ^(?:GET)$" 
</code></pre>

<h2>Two layers application - AngularJS + CouchDB</h2>

<p>Speaking to this mod security, we are actually working some simple two layers application, only front-end(AngularJS) and datastore(Couchdb).</p>

<p>This simple stack suits for some applications, which only load data from backend.And backend data would be updated by application operator.Those applications could be FAQ or News website etc. We use CouchDB because it has very good REST API and Web UI to manage the data.</p>

<p>So no application layer, :-)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Start Blogging]]></title>
    <link href="http://wbinglee.com/blog/2014/03/17/start-blogging/"/>
    <updated>2014-03-17T18:23:36+13:00</updated>
    <id>http://wbinglee.com/blog/2014/03/17/start-blogging</id>
    <content type="html"><![CDATA[<h2>Blogging, NOW!</h2>

<p>以前有一个blog，但是各种原因最后连之前的文章都找不回来了。这也是一个很好的教训，能不自己hosting就不要自己hosting，数据备份还是不如source code管理容易，于是我就选择了当然颇为流行的github+octopress.</p>

<p>到新西兰快两年的时间，做个各种各样的事情，其实还是不错的，接触面还是挺广的。基本上每天都在解决各种各样的问题，每每解决了问题，心里都有一种强烈的冲动把它blog下来，谈不上说分享，更多想记录一下自己做的事情，希望能两年后知道自己之前做了什么事情。一直觉得家里忙（本人是两个孩子的爸了哦，:)),但这一切都不是借口，要做就现在做吧。</p>

<p>于是买了域名(wbinglee.com)，就开干了。至于为什么要用这个域名，只是它和我太有缘了吧。我的gmail的帐号就是这个，很多网站的帐号也是这个，那域名也就这个吧，看起来无比的熟悉。</p>

<p>新的blog中关于技术问题，我会尽量使用英文（虽然不咋地&hellip;）;其他杂七杂八的就中文吧，英文肯定写不出感觉。</p>

<p>好，开始了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用jconsole来管理WebSphere AppServer的MBean]]></title>
    <link href="http://wbinglee.com/blog/2009/11/29/using-jconsole-in-websphere-application-server/"/>
    <updated>2009-11-29T09:40:19+00:00</updated>
    <id>http://wbinglee.com/blog/2009/11/29/using-jconsole-in-websphere-application-server</id>
    <content type="html"><![CDATA[<p>最近需要在WebSphere中做点魔术，所以要使用WAS(WebSphere Application Server)中的管理能力。JMX是WAS的管理的核心，苦于<a href="http://publib.boulder.ibm.com/infocenter/wasinfo/v6r1/index.jsp?topic=/com.ibm.websphere.javadoc.doc/public_html/mbeandocs/index.html">WAS Mbean文档</a>并不是那么详细，这个时候就可以使用jconsole了。jconsole是一个JDK自带的JMX兼容的JVM管理工具，可以用它来可视化的查看和操作Mbean。</p>

<p>在启动jconsole时需要一些WAS的jar，所以我这样来做：</p>

<ul>
<li>创建一个文件夹，例如：C:\programs\jconsole</li>
<li>将一些需要的jar 拷贝进入到这个文件夹的libs中：</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>com.ibm.ws.admin.client_6.1.0.jar   （在&lt;WAS_HOME&gt;/runtimes)   
</span><span class='line'>ibmorbapi.jar  (在&lt;WAS_HOME&gt;/java/jre/lib)
</span><span class='line'>ibmorb.jar (在&lt;WAS_HOME&gt;/java/jre/lib)
</span><span class='line'>ibmcfw.jar (在&lt;WAS_HOME&gt;/java/jre/lib)</span></code></pre></td></tr></table></div></figure>


<ul>
<li>编写一个bat文件</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'><span class="k">set</span> <span class="nv">JAVA_HOME</span><span class="o">=</span><span class="s2">&quot;C:\Program Files\Java\jdk1.6.0_16&quot;</span>
</span><span class='line'><span class="k">set</span> <span class="nv">WAS6</span>.<span class="m">1</span>_JARS<span class="o">=</span>C:\programs\jconsole\libs
</span><span class='line'>
</span><span class='line'><span class="k">set</span> <span class="nv">BOOTJARS</span><span class="o">=</span><span class="nv">%WAS6</span>.<span class="m">1</span>_JARS%\ibmorbapi.jar
</span><span class='line'><span class="k">set</span> <span class="nv">BOOTJARS</span><span class="o">=</span><span class="nv">%BOOTJARS%</span>;<span class="nv">%WAS6</span>.<span class="m">1</span>_JARS%\ibmorb.jar
</span><span class='line'><span class="k">set</span> <span class="nv">BOOTJARS</span><span class="o">=</span><span class="nv">%BOOTJARS%</span>;<span class="nv">%WAS6</span>.<span class="m">1</span>_JARS%\ibmcfw.jar
</span><span class='line'>
</span><span class='line'><span class="k">set</span> <span class="nv">CLASSPATH</span><span class="o">=</span><span class="nv">%WAS6</span>.<span class="m">1</span>_JARS%\com.ibm.ws.admin.client_<span class="m">6</span>.<span class="m">1</span>.<span class="m">0</span>.jar
</span><span class='line'><span class="k">set</span> <span class="nv">CLASSPATH</span><span class="o">=</span><span class="nv">%CLASSPATH%</span>;<span class="nv">%JAVA_HOME%</span>\lib\tools.jar
</span><span class='line'><span class="k">set</span> <span class="nv">CLASSPATH</span><span class="o">=</span><span class="nv">%CLASSPATH%</span>;<span class="nv">%JAVA_HOME%</span>\lib\jconsole.jar
</span><span class='line'>
</span><span class='line'><span class="nv">%JAVA_HOME%</span>\bin\jconsole  -J-Xbootclasspath<span class="n">/p:%BOOTJARS%</span> -J-Djava.class.path<span class="o">=</span><span class="nv">%CLASSPATH%</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>使用如下URL来远程连接WAS中的JMX server</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'>service:jmx<span class="nl">:iiop</span>:<span class="n">//localhost:2809/jndi/JMXConnector</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中这个端口号是RMI Connector的端口号，可以在启动的logs发现。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'>ADMC<span class="m">0026</span>I:The RMI Connector is available at port  <span class="m">2809</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>或者到admin console中查看
Application servers > server1 >   Administration Services > JMX   connectors</p>

<p>好，这样就可以了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一直在写]]></title>
    <link href="http://wbinglee.com/blog/2009/09/14/keep-writing/"/>
    <updated>2009-09-14T15:25:15+00:00</updated>
    <id>http://wbinglee.com/blog/2009/09/14/keep-writing</id>
    <content type="html"><![CDATA[<p>刚和同学聊天时，问我blog怎么好长时间都没有更新了。看了看上篇文章的日期，离现在也有两个月有余了，有些惭愧。最近在做一些有意思的技术调研，倒是会在接下来的文章中分享一些。其实这段日子也在写一些东西，不过不在自己的blog上面了罢了。</p>

<ul>
<li><p>带给PHP 和 Java 世界的双赢  (<a href="http://www.netvibes.com/shawnzhu">朱可</a>&amp;me) -《 程序员》杂志 2009年09月刊</p></li>
<li><p>Ajax - 超越桌面的Web 用户体验 - 《<a href="http://www.webspherechina.net">WebSphere 中国</a>》纸质杂志第二期</p></li>
<li><p><a href="http://www.ibm.com/developerworks/cn/websphere/library/techarticles/0909_smash_dojo_Ajaxdev/index.html">在WebSphere sMash中使用Dojo开发Ajax的Web应用程序</a> - developerWorks</p></li>
</ul>


<p>时间总是匆匆，让我们继续前行&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[读《PPK on JavaScript》]]></title>
    <link href="http://wbinglee.com/blog/2009/07/07/read-ppk-on-javascript/"/>
    <updated>2009-07-07T23:53:46+00:00</updated>
    <id>http://wbinglee.com/blog/2009/07/07/read-ppk-on-javascript</id>
    <content type="html"><![CDATA[<p> <a href="http://www.quirksmode.org/">PPK</a>也是在JavaScript世界中的风云人物了，这位老兄对于浏览器端的技术以及各种浏览器的兼容性有极其丰富的经验。在这本书中，他谈了很多关于可访问性(Accessibility)和可用性(Usability)的一些问题，非常有趣。比如他说“不同的开发者以不同的方式诠释了JavaScript的目的。简单而形象地说就是：深受CSS革命影响的传统Web开发者们，创建的是瘦的、可访问性很强、乱糟糟的JavaScript代码；而来至服务器端开发的‘资深程序员们’用完美的面向对象代码、创建的是胖的、可访问性很差的Ajax客户端”。显然，ppk同学应该属于写乱糟糟但可访问性很好的人，而现在我做的大量事情却是后者。他更多相信现在的Ajax只是一种泡沫，当这个泡沫破灭并且大量‘资深服务器程序员’消失时，JS的开发者会更加注重可访问性。  可能体会不到ppk经历浏览器各种痛苦的经历，但是总体来说浏览器都在坚定地遵循Web标准，JavaScript的支持也会成为浏览器必备要求。anyway，事情总在发展，好戏在后头。分享一下我觉得这本书中几个有趣的地方。</p>

<h3>可访问性和可用性</h3>

<p>可访问性(<a href="http://en.wikipedia.org/wiki/Accessibility">Accessibility</a>)是指你的网页对于任何人、在任何环境下都是可持续访问的。特别是指某些用户，比如弱视、浏览器不支持JavaScript或者另外一些情况，比如用户使用Mobile使用你的网页等等。而可用性(Usability)是指使用或者浏览你的网页的容易程度(这里我们只谈web页面),通常它指我们能更有效率地使用、更容易地学习以及更加满意地使用它。举个例子来说，你让你的web页面支持IE6，或者支持mobile都是在提高它的可访问性；而是用CSS来改善布局让用户更容易阅读、使用JavaScript做一些对用户有帮助的互动都是在提高它的可用性。</p>

<p>Web页面都是由下面三个层组成的，通过它们我们可以了解到它们之间的关系以及它们和可访问性和可用性之间的关系。</p>

<ul>
<li><p>HTML结构层</p></li>
<li><p>CSS表现层</p></li>
<li><p>JavaScript行为层</p></li>
</ul>


<p><img src="http://liwenbing.cn/wp-content/uploads/2009/07/web3layers-300x245.PNG" alt="web3layers" /></p>

<p>Web页面的三个层，HTML结构层是必需的基础，CSS表现层和JavaScript行为层建于它之上。所以在客户端代码中不得不关注的话题就是这三个层的关注点分离。具体探讨一下这三个的分离：</p>

<p><strong>表现与结构的分离(CSS与HTML)</strong></p>

<p>这个分离很好理解，基本思想就是确保HTML来定义结构，而所有的表现都定义在另外单独的CSS文件中。HTML不应该出现<code>&lt;font&gt;</code>标签和用于表现的表格。如果想定义字体和布局，都应该在CSS中处理。</p>

<p>大部分情况下面我们知道达到某个效果是修改表现或者结构是清楚的。但是有些情况下当更改HTML和修改CSS都可以时，你需要慎重地思考到底哪种是合理的。比如一个节点，你希望它不显示，那么你可以在HTML上面删除该节点或者使用CSS来“display:none”。当这种情况是，需要自己分析所需要的效果属于哪种情况，然后修改合理的层。</p>

<p><strong>行为与结构的分离(JavaScript与HTML)</strong></p>

<p>这个也比较好理解，就是不要把任何的JavaScript代码写到你的HTML页面中。应该把所有JavaScript代码放到一个独立的js文件中，然后将它链入到所有需要它的HTML页面中。</p>

<p>关于这个有一个有趣的话题就是：<strong>无侵入脚本编程(unobtrusive scripting).</strong>简单来说它就是通过HTML和JavaScript的分离以达到页面的可访问性和可用性的最大化。既JavaScript失效了，页面还是可阅读和理解的；而通过引入脚本和JavaScript的hook，就可以让脚本运行，增强可用性。</p>

<p><strong>行为与表现的分离(JavaScript与CSS)</strong></p>

<p>这个的分离是非常复杂的，而且并没有总结出什么特别系统的规则。CSS和JavaScript是有重合的灰色地带的，有时候完全不能确切地把某个效果归为表现还是行为。比如是使用CSS中的hover还是JavaScript的mouseover/mouseout。基本来说你自己得根据具体情况做合理的选择吧。</p>

<h3>事件捕捉模型</h3>

<p>在HTML的事件模型中有一个有趣的话题。这个简单的问题就是：如果一个节点和它的父亲节点都有对同一个事件的处理，那么到底哪个事件会被先执行呢？这就是关于事件的冒泡和捕获。事件冒泡是说事件从它的目标元素开始，沿着文档树依次向上冒泡，并触发相应的事件处理函数。而事件的捕捉是刚好相反的，它从文档的第一级开始，然后沿着文档树向下游，知道事件目标为止。</p>

<p>在W3C模型中，捕获和冒泡都会发生。当一个事件触发时，它先被文档捕获，到了事件目标后，再冒泡到文档顶层。而传统模型和微软模型只支持事件冒泡，而不支持事件捕获。所以最好是限制使用事件冒泡。其实在我们的实际编程中，很少关心这个话题，是因为大部分情况我们都只使用了事件冒泡。</p>

<p>更加具体的可以查看ppk的文章：<a href="http://www.quirksmode.org/js/events_order.html">http://www.quirksmode.org/js/events_order.html</a></p>

<h3>小记</h3>

<p>应该来说PPK所谈的JavaScript是一个更加全面的浏览器编程的世界，让人可以全面来了解这个世界包含的东西。其实大部分的内容在PPK的网站上都有，值得读读。<a href="http://www.quirksmode.org/js/contents.html">http://www.quirksmode.org/js/contents.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[蓝色的血液]]></title>
    <link href="http://wbinglee.com/blog/2009/06/17/blue-blood/"/>
    <updated>2009-06-17T16:51:16+00:00</updated>
    <id>http://wbinglee.com/blog/2009/06/17/blue-blood</id>
    <content type="html"><![CDATA[<p>我是一名pure blue，从在IBM实习到开始工作到现在，在这样的一家百年老店工作，虽然有太多让人抱怨的地方，但是你会喜欢这里的人（虽然不是全部），并且从心里慢慢接受它的文化和价值观。这样的一个公司的价值观是令人敬佩的，足以指导你做人做事。特别不喜欢一些人张口闭口说这不如人那不爽，只怕自己没有自信罢了。不足就努力去改变它，你真受不了了就quit，what&rsquo;s the big deal？一个人在外人面前骂娘（自己老娘）的时候，是不可能得到尊重的，只是哗众取宠罢了。当你流淌着蓝色的血液时，你是自豪的。</p>

<p>今早一聊天之不爽，故有此文。下面摘除一些从《品味蓝色》上句子。我很喜欢。</p>

<blockquote><p>任何一名优秀的IBM人，当你问他成功之道的时候，他也许无法教会你具体的流程和方法，但他一定会告诉你，没有什么，不过是秉承诚信负责之道好好做人、好好做事罢了，因为在IBM，机会永远青睐于那些有好的工作表现和正直诚实的人。 &ndash; 周伟焜</p>

<p>学会尊重别人，同时赢得别人尊重，这很重要。尊重别人身上的优点，你会变得更宽容。执着、专业、深入是赢得他人尊重的根本。谁都有缺点，包括我们的公司。但是要学会用宽容的心来对待周围的一切。得到尊重，你每天都会快乐。 &ndash; 郭希文</p>

<p>所谓分享成功其实就是看你怎样Increase your influence，这并不是仅指依靠手中的权力发号施令，而是指能够提供给别人有价值的意见或见地。同时，在团队合作中，“诚信（integrity）”则是最重要的原则。无论对公司，还是对在公司团队中工作的个体，诚信都是立足之本，信任之基。对一个科学家来说，诚信就更重要，科学是不容半点虚假成分的，谁想投机取巧，违背科学规律，只能是搬起石头砸自己的脚。&ndash; 叶天正</p>

<p>认真积极地工作，让我在事业上可以不断进步；以尊重、信任的态度与家人、同事沟通，让我得到了家人的支持，同事的尊敬，从而拥有了和谐美满的家庭和成功的事业。面对这一切，我最深的感受就是四个字——“知福惜福”。 &ndash;于雪莉</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sMash Stakeholder Meeting]]></title>
    <link href="http://wbinglee.com/blog/2009/06/17/smash-stakeholder-meeting/"/>
    <updated>2009-06-17T15:41:37+00:00</updated>
    <id>http://wbinglee.com/blog/2009/06/17/smash-stakeholder-meeting</id>
    <content type="html"><![CDATA[<p>上周进行了sMash的stakeholder meeting，在这个会上我介绍了Flow的新的特性，并且进行Demo的演示。我们的演示大概从5分钟开始，之前是产品开发经理的一些介绍。本人英文口语比较烂，不知道他们到底听懂了没有。详细的信息可以看<a href="http://www.projectzero.org/blog/index.php/2009/06/15/june-stakeholder-meeting-replay/">projectzero 的blog</a>。Vido在Viddler上，至于为什么在viddler上，我想可能是为了照顾中国用户无法访问YouTube的原因吧，呵呵。</p>

<p><a href="http://www.viddler.com/explore/projectzero/videos/4/">http://www.viddler.com/explore/projectzero/videos/4/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dojo Widget的析构过程]]></title>
    <link href="http://wbinglee.com/blog/2009/06/05/dojo-widget-destructor/"/>
    <updated>2009-06-05T11:09:13+00:00</updated>
    <id>http://wbinglee.com/blog/2009/06/05/dojo-widget-destructor</id>
    <content type="html"><![CDATA[<p>了解dojo widget（或者说dijit）的析构过程，不仅让你更加了解整个dijit的生命周期，同样也能帮助我们在自己定制化的dijit中如何正确地释放资源。（这里讨论的dojo应该是在0.9或者以上版本的)</p>

<p>下面是dijit的析构过程：</p>

<pre><code>                        destroyRecursive
                    /                      \
                destroy                   destroyDescendants
        /        |        \
uninitialize  disconnect() destroyRendering
</code></pre>

<p>一些常见的<strong>错误</strong>是如下：</p>

<ul>
<li><p>使用destroy()去销毁一个dijit。我们应该使用destroyRecursive()去销毁一个dijit，从上面的过程可以看出，destroyRecursive()会销毁其孩子widgets。</p></li>
<li><p>使用destory()去销毁定制dijit中的资源。更可怕的是有的代码可能是直接覆盖destroy，而根本不调用_Widget中的destory。uninitialize()才是dijit暴露出来给定制化widget进行析构的stub function。</p></li>
</ul>


<h3>结论</h3>

<p><strong>使用destroyRecursive()去销毁dijit，使用uninitialize()在定制化的dijit来释放自己的资源</strong>。destroyDescendants，destroyRendering基本上用不到，也不要去覆盖它们。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[为什么Firefox 3不能加载本地的JavaScript文件了？]]></title>
    <link href="http://wbinglee.com/blog/2009/06/05/why-ff3-cannot-load-local-javascript-file/"/>
    <updated>2009-06-05T08:36:38+00:00</updated>
    <id>http://wbinglee.com/blog/2009/06/05/why-ff3-cannot-load-local-javascript-file</id>
    <content type="html"><![CDATA[<p>一段时间来一直受这样的困扰，就是我的Firefox无法运行本地的dojo的测试文件。一直以为是我的firefox或者机器出了什么问题，就只好去使用IE或者Chrome去运行这些测试例子，可惜不能用firebug的确让人很不爽。</p>

<p>今天在firebug查看了一些错误情况，报错居然是“Access to restricted URI denied”。这个明显是跨域访问的错误，但是本地文件怎么报这样的错呢？在Firefox的about:config搜索了一下policy,居然找到了原因所在，原来Firefox对于本地文件也进行了同源访问的安全设置,配置参数是：security.fileuri.strict_origin_policy。这个新的设置只是在firefox 3才被加入，并且默认是开启的。不过你也可以将这个关掉，这样就可以如同以前那样运行本地的dojo测试用例，或者其它你想本地加载的JavaScript文件。</p>

<p><a href="http://liwenbing.cn/2009/06/05/why-ff3-cannot-load-local-javascript-file/local-file-p-origin-policy/"><img src="http://liwenbing.cn/wp-content/uploads/2009/06/local-file-p-origin-policy-300x42.png" alt="local-file-p-origin-policy" /></a></p>

<p>继续在google了一下，找了这个"feature"的由来，<a href="https://bugzilla.mozilla.org/show_bug.cgi?id=230606">https://bugzilla.mozilla.org/show_bug.cgi?id=230606</a>，大概是说本地的文件如果没有这样的限制，可以访问本机的其他文件，这样会造成安全隐患。John Resig（Father of  jQuery) 也有一个blog关于这个问题，<a href="http://ejohn.org/blog/tightened-local-file-security/">http://ejohn.org/blog/tightened-local-file-security/</a>，下面的评论也挺值得看看的。</p>

<p><strong>More Links: </strong></p>

<ul>
<li><p><a href="http://www.dojotoolkit.org/support/faq/why-does-dojo-fail-load-file-urls-firefox-3">http://www.dojotoolkit.org/support/faq/why-does-dojo-fail-load-file-urls-firefox-3</a></p></li>
<li><p><a href="http://kb.mozillazine.org/Security.fileuri.origin_policy">http://kb.mozillazine.org/Security.fileuri.origin_policy</a></p></li>
<li><p><a href="http://kb.mozillazine.org/Security.fileuri.strict_origin_policy">http://kb.mozillazine.org/Security.fileuri.strict_origin_policy</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScript中==等同运算符的类型转换]]></title>
    <link href="http://wbinglee.com/blog/2009/05/22/javascript-equal-type-conversion/"/>
    <updated>2009-05-22T04:59:18+00:00</updated>
    <id>http://wbinglee.com/blog/2009/05/22/javascript-equal-type-conversion</id>
    <content type="html"><![CDATA[<p>这周在给一些新员工讲JavaScript的时候，谈了==和===的区别，本质来说，===是严格的等同运算符，要求两者类型相同并且值相同；而==运算符在做比较时，会做一定的类型转换。我们在使用过程中应该使用===而不是==，因为这种类型转换后的比较往往都不是你想要的。当时列出了corckfork最喜欢一些例子：</p>

<pre><code>    '' == '0'          // false
    0 == ''            // true
    0 == '0'           // true
    false == 'false'   // false
    false == '0'       // true
    false == undefined // false
    false == null      // false
    null == undefined  // true
    ' \t\r\n ' == 0    // true
</code></pre>

<h3>转换规则</h3>

<p>当时有人就问了，那么在做类型转换的时候倒是等式的左边向右边转，还是反过来呢？其实这些都是不对的，我们去看看ECMAScript的规范，会发现它有对于等同运算符做类型转换很明确的比较算法，下面我将其翻译如下:
<strong>对于比较x==y，</strong></p>

<p>1.如果x和y类型不同，那么到14步；
//
//2-13步，为类型相同的比较
//
14.如果x是null，y是undefined，返回true；
15.如果x是undefined，y是null，返回true；
16.如果x是Number，y是String，将y转化成Number，然后再比较；
17.如果x是String，y是Number，将x转化成Number，然后再比较；
18.如果x是Boolean，那么将x转化成Number，然后再比较；
19.如果y是Boolean，那么将y转化成Number，然后再比较；
20。如果x是String或者Number，y是Object，那么将y转化成基本类型，再进行比较；
21.如果x是Object，y是String或者Number，将x转化成基本类型，再进行比较；
22.其他情况均返回false；</p>

<p>ECMA这帮人写的算法过程比较啰嗦，简单一句话来概括就是，对于基本类型Boolean，Number，String，三者之间做比较时，总是向Number进行类型转换，然后再比较；如果有Object，那么将Object转化成这三者，再进行比较；对于null和undefined，只有x，y分别是它们时才相同，其他都为false。</p>

<p>另外，对于转化到Number的算法，细节可以来看ECMAScript的规范，但是基本上下面这个<a href="http://www.jibbering.com/faq/faq_notes/type_convert.html#tcNumber">几个表</a>可以覆盖大部分的内容:</p>

<p>type-convert to number (+col) : String Values.</p>

<p>&ldquo;&rdquo;
(empty
string)
&ldquo;-1.6&rdquo;
&ldquo;0&rdquo;
&ldquo;1&rdquo;
&ldquo;1.6&rdquo;
&ldquo;8&rdquo;
&ldquo;16&rdquo;
&ldquo;16.8&rdquo;</p>

<p>+col</p>

<p>0</p>

<p>-1.6</p>

<p>0</p>

<p>1</p>

<p>1.6</p>

<p>8</p>

<p>16</p>

<p>16.8</p>

<p>type-convert to number (+col) : String Values.</p>

<p>&ldquo;123e-2&rdquo;
&ldquo;010&rdquo;
(Octal)
&ldquo;0x10&rdquo;
(Hex)
&ldquo;0xFF&rdquo;
(Hex)
&ldquo;-010&rdquo;
&ldquo;-0x10&rdquo;
&ldquo;xx&rdquo;</p>

<p>+col</p>

<p>1.23</p>

<p>10</p>

<p>16</p>

<p>255</p>

<p>-10</p>

<p>NaN</p>

<p>NaN</p>

<p>type-convert to number (+col) : Other Values.</p>

<p>undefined
null
true
false
new Object()
function(){
return;
}</p>

<p>+col</p>

<p>NaN</p>

<p>0</p>

<p>1</p>

<p>0</p>

<p>NaN</p>

<p>NaN</p>

<p>再回头来看看corkford给出的例子，然后使用上面的规则去判断；</p>

<pre><code> '' == '0'          // false
//类型相同，毫无疑问，值不同，所以结果为false

0 == ''            // true
//String要像Number转化，''是空String，根据上面的表，转成0，所以结果是true

0 == '0'           // true
//String要像Number转化，根据上面的转化Number表，'0'转成0，所以结果是true

false == 'false'   // false
//有Boolean，转化成Number，所以第一步转化后为0=='false'；
//然后'false'向Number转，结果是NaN,最后变成比较0==NaN,那么肯定是false。
//（NaN和任何相比都是false，就算是自己也是false， NaN==NaN //false)

false == '0'       // true
//有Boolean，转化成Number，经过第一次转化就成了0=='0';
//就变成了上面的第3个例子，所以是true

false == undefined // false
//对于undefined和null，只有两边分别是两者才是true，其他都是false；所以是false

false == null      // false
//对于undefined和null，只有两边分别是两者才是true，其他都是false；所以是false

null == undefined  // true
//对于undefined和null，只有两边分别是两者才是true，其他都是false；所以是true

' \t\r\n ' == 0    // true
//对于String，先转成Number，对于空String，都将转成0，所以转化后成为0==0,结果为true
//（注意，空字符不仅仅是只是空格，还包括\t\r\n等等，更多可以见ECMAScript spec的9.3.1）
</code></pre>

<h2>总结</h2>

<p>虽然我们了解了==这个坏东西的本质，但是在我们的实际JavaScript编程中是要避免使用==，而是去使用===这个严格的比较运算符。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[最近的一篇新的developerWorks文章 - 使用 Assemble Flow 开发简单协作流程]]></title>
    <link href="http://wbinglee.com/blog/2009/05/14/new-article-in-developerworks/"/>
    <updated>2009-05-14T17:05:04+00:00</updated>
    <id>http://wbinglee.com/blog/2009/05/14/new-article-in-developerworks</id>
    <content type="html"><![CDATA[<p>终于这篇文章在dWs上面发表出来了。
<a href="http://www.ibm.com/developerworks/cn/websphere/library/techarticles/0905_smash-assembleflow/">使用 Project Zero 和 WebSphere sMash Assemble Flow 构建 Mashup 应用，第 2 部分: 使用 Assemble Flow 开发简单协作流程</a></p>

<p>&ndash;文章摘要如下</p>

<p>在使用 WebSphere® sMash 中的 Assemble flow 来构建 Mashup 应用的<a href="http://www.ibm.com/developerworks/cn/web/wa-lo-pz-assembleflow1/">第 1 部分</a>中，我们介绍了 Assemble flow 的基本概念，以及如何使用 Assemble flow 来实现基于 Feed 的 Mashup 服务。本文中，我们将向您介绍如何使用 Assemble flow 来开发简单的协作流程。</p>

<p>&ndash;文章目录如下:</p>

<p><a href="http://www.ibm.com/developerworks/cn/websphere/library/techarticles/0905_smash-assembleflow/#">本文内容包括：</a></p>

<p><img src="http://www.ibm.com/i/v14/t/cl-bullet.gif" alt="" /></p>

<p><a href="http://www.ibm.com/developerworks/cn/websphere/library/techarticles/0905_smash-assembleflow/#N10110">引言</a></p>

<p><img src="http://www.ibm.com/i/v14/t/cl-bullet.gif" alt="" /></p>

<p><a href="http://www.ibm.com/developerworks/cn/websphere/library/techarticles/0905_smash-assembleflow/#N10142">开始之前</a></p>

<p><img src="http://www.ibm.com/i/v14/t/cl-bullet.gif" alt="" /></p>

<p><a href="http://www.ibm.com/developerworks/cn/websphere/library/techarticles/0905_smash-assembleflow/#N1016A">在Assemble flow中访问REST资源和服务</a></p>

<p><img src="http://www.ibm.com/i/v14/t/cl-bullet.gif" alt="" /></p>

<p><a href="http://www.ibm.com/developerworks/cn/websphere/library/techarticles/0905_smash-assembleflow/#N1021D">面向 REST 的流程接口</a></p>

<p><img src="http://www.ibm.com/i/v14/t/cl-bullet.gif" alt="" /></p>

<p><a href="http://www.ibm.com/developerworks/cn/websphere/library/techarticles/0905_smash-assembleflow/#N103BE">使用 REST 风格实现流程会话</a></p>

<p><img src="http://www.ibm.com/i/v14/t/cl-bullet.gif" alt="" /></p>

<p><a href="http://www.ibm.com/developerworks/cn/websphere/library/techarticles/0905_smash-assembleflow/#N10425">简单人工协作流程</a></p>

<p><img src="http://www.ibm.com/i/v14/t/cl-bullet.gif" alt="" /></p>

<p><a href="http://www.ibm.com/developerworks/cn/websphere/library/techarticles/0905_smash-assembleflow/#N10443">webUI 活动</a></p>

<p><img src="http://www.ibm.com/i/v14/t/cl-bullet.gif" alt="" /></p>

<p><a href="http://www.ibm.com/developerworks/cn/websphere/library/techarticles/0905_smash-assembleflow/#N104DE">使用 webUI 活动构建人工协作流程</a></p>

<p><img src="http://www.ibm.com/i/v14/t/cl-bullet.gif" alt="" /></p>

<p><a href="http://www.ibm.com/developerworks/cn/websphere/library/techarticles/0905_smash-assembleflow/#N10650">配置 sMash 应用程序</a></p>

<p><img src="http://www.ibm.com/i/v14/t/cl-bullet.gif" alt="" /></p>

<p><a href="http://www.ibm.com/developerworks/cn/websphere/library/techarticles/0905_smash-assembleflow/#N106F8">结束语</a></p>

<p><img src="http://www.ibm.com/i/v14/t/cl-bullet.gif" alt="" /></p>

<p><a href="http://www.ibm.com/developerworks/cn/websphere/library/techarticles/0905_smash-assembleflow/#download">下载</a></p>

<p><img src="http://www.ibm.com/i/v14/t/cl-bullet.gif" alt="" /></p>

<p><a href="http://www.ibm.com/developerworks/cn/websphere/library/techarticles/0905_smash-assembleflow/#resources">参考资料 </a></p>

<p><img src="http://www.ibm.com/i/v14/t/cl-bullet.gif" alt="" /></p>

<p><a href="http://www.ibm.com/developerworks/cn/websphere/library/techarticles/0905_smash-assembleflow/#author">作者简介</a></p>

<p><img src="http://www.ibm.com/i/v14/t/cl-bullet.gif" alt="" /></p>

<p><a href="http://www.ibm.com/developerworks/cn/websphere/library/techarticles/0905_smash-assembleflow/#rate">对本文的评价</a></p>

<p>&ndash;另外，发了另外两个blog在projectzero的中文博客上面；</p>

<ul>
<li><p><a href="http://www.projectzero.org/cblog/index.php/2009/05/14/article-at-developerworks-assemble-flow-collaboration/">developerWorks文章：使用 Assemble Flow 开发简单协作流程</a></p></li>
<li><p><a href="http://www.projectzero.org/cblog/index.php/2009/05/14/community-event-bpm-tt-workflow/">在TechTarget中国中的BPM活动</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于‘行’与‘你怎么知道’]]></title>
    <link href="http://wbinglee.com/blog/2009/05/10/about-ok-and-how-do-you-know/"/>
    <updated>2009-05-10T16:18:39+00:00</updated>
    <id>http://wbinglee.com/blog/2009/05/10/about-ok-and-how-do-you-know</id>
    <content type="html"><![CDATA[<p>周末参加了一个<a href="http://www.opug.org.cn">opug</a>的一个线下,真的很棒，收集到更多资料后，我会在后面的文章中来专门谈这个活动。其实活动之后我一直在琢磨在活动中给我触动的一件小事，记得当时有一位嘉宾说了一个观点后，我立刻机械地说“对”，坐在我对面的<a href="http://www.javafox.org/">长城</a>同学的反应是”你怎么知道“。其实道理很简单，对于观点你应该有一个什么样的正确的直觉反应。做技术，甚至无论做什么，都应该有一个怀疑和刨根问底的思维方式，这样才能很好的培养对于问题的独立思考能力。</p>

<p><strong>嗯，对于你不知道的东西/观点，多问点为什么，别让‘对’/&lsquo;行‘成为自己的第一反应。</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[怎么用twitter？]]></title>
    <link href="http://wbinglee.com/blog/2009/05/01/how-to-use-twitter/"/>
    <updated>2009-05-01T17:12:09+00:00</updated>
    <id>http://wbinglee.com/blog/2009/05/01/how-to-use-twitter</id>
    <content type="html"><![CDATA[<p>09年是year of twitter, 这个东西现在火的一塌糊涂，google和facebook对它是羡慕的不得了。国内IT圈中也是刮起了一阵twitter风，好像你没有个twitter都不好意思和别人打招呼。但是当你屁颠屁颠地在上面发点东西的时候，也同时也被大量的信息噪音给淹没。有的人用twitter在聊天，有的人发布的信息非常多但是毫无意义，慢慢地这个东西成为了一种负担。其实twitter火起来有它的原因，但要看怎么来用了。</p>

<p>twitter来至一个简单的想法，告诉别人你在做什么。现在有很多的工具来帮助人们进行交流，比如blog和IM，但是日常发生在自己身上的一些事情使用这样一些工具都不太适合。我们不可以发一个blog告诉别人我在做什么，也不可能在聊天工具上面像疯了似的给每个人发这些消息。然而通过twitter，人们可以进一步加深相互的了解。比如，我的一个好朋友发消息说他在做一道菜。我看到后，很好奇他居然还会做菜呀，于是我们有了公共的兴趣点，可以进一步地聊聊。</p>

<p>从技术上面来讲，twitter的火爆说明了开放API的成功。有了twitter提供的API，就有了它的客户端的繁荣，桌面的、浏览器插件的、手机的&hellip;.任何平台任何环境，只要你想到的都可以找到一堆的twitter客户端。 如果twitter没有这些多的客户端和社区支持，估计也难以流行起来。</p>

<p>话说回来，怎么用twitter呢？我想可以从两点来看，一是你希望收到什么消息；二是你应该给出什么样信息。关于收到什么消息，基本的原则应该是：<strong>只follow你所关心的人和事</strong>。前端日子follow了很多技术名人的twitter，发现他们发的信息根本都不是我关心的。我并不是他们的朋友，我根本不关心你和谁吃饭了，你今天去哪里运动了。所以很简单，将你并不认识的名人从你的follow列表中删掉，因为你对这些名人其实真正关心只是他的知识，而这些只要订阅他们的blog就可以啦。对于技术和某种事情的关注，follow这个社区的twitter就好了。另外对于那些乱发垃圾消息的人，删除好了。这个世界不是信息太少，而是太多了。</p>

<p>那用twitter应该发什么样的消息呢？我想原则应该是：<strong>只发有用的信息，并且这个信息不需要通过其他消息的上下文就能理解。</strong>如果是个人还是用twitter的本意就好了，就是发你在做什么，或者发现什么有意思的事情。社区类的twitter可以发当然社区发生重要的事情。切忌使用twitter进行聊天了，因为follow你的人并不一定follow了和你聊天的朋友，所以这些没有上下文的消息就毫无意义。</p>

<p>最后我想到了一位美女同事对于twitter的理解，<em>twitter的消息就像一种缘分，你看到了就是一种缘分，不需要像聊天那么有紧迫感，也不像blog那么正式</em>。<strong>所以还是一切随缘吧</strong>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Enable Gmail Random Signature Using Google App Engine]]></title>
    <link href="http://wbinglee.com/blog/2009/04/30/enable-gmail-random-signature-using-google-app-engine/"/>
    <updated>2009-04-30T21:21:52+00:00</updated>
    <id>http://wbinglee.com/blog/2009/04/30/enable-gmail-random-signature-using-google-app-engine</id>
    <content type="html"><![CDATA[<p>在GMail的Lab中有这样的一个小东西，它可以随机地加入签名档到你的邮件中。这个一直是我想要的，于是在五一无聊的时候试试。</p>

<p>首先当然是要到GMail的Lab中enable这个功能了。</p>

<p><a href="http://liwenbing.cn/2009/05/01/enable-gmail-random-signature-using-google-app-engine/enable1/"><img src="http://liwenbing.cn/wp-content/uploads/2009/05/enable1.png" alt="enable1" /></a></p>

<p>这个时候到Setting->General中的Signature中会多出这么一个东西，</p>

<p><a href="http://liwenbing.cn/wp-content/uploads/2009/05/setting.png"><img src="http://liwenbing.cn/wp-content/uploads/2009/05/setting.png" alt="setting" /></a></p>

<p>默认是<a href="http://www.brainyquote.com/link/quotefu.rss%E8%BF%99%E4%B8%AA%E5%9C%B0%E5%9D%80%EF%BC%8C%E8%BF%99%E4%B8%AA%E6%97%B6%E5%80%99%E5%BD%93%E4%BD%A0%E6%96%B0%E5%BB%BA%E4%B8%80%E4%B8%AA%E9%82%AE%E4%BB%B6%EF%BC%8C%E5%B0%B1%E4%BC%9A%E5%8F%91%E7%8E%B0%E6%9C%89%E7%AD%BE%E5%90%8D%E6%A1%A3%E9%9A%8F%E6%9C%BA%E6%8F%92%E5%85%A5%E5%88%B0%E9%82%AE%E4%BB%B6%E4%B8%AD%E3%80%82%E4%BD%86%E6%98%AF%E8%BF%99%E4%B8%AA%E5%B9%B6%E4%B8%8D%E6%98%AF%E6%88%91%E6%83%B3%E8%A6%81%E7%9A%84%E7%AD%BE%E5%90%8D%E6%A1%A3%EF%BC%8C%E6%88%91%E9%9C%80%E8%A6%81%E5%AE%83%E6%98%AF%E4%BB%8E%E6%88%91%E8%87%AA%E5%B7%B1%E7%9A%84%E7%AD%BE%E5%90%8D%E6%A1%A3%E5%88%97%E8%A1%A8%E4%B8%AD%E5%8E%BB%E6%89%BE%E3%80%82%E8%BF%99%E4%B8%AA%E5%8A%9F%E8%83%BD%E7%9A%84%E7%AD%BE%E5%90%8D%E6%A1%A3%E7%9A%84%E4%BF%A1%E6%81%AF%E6%98%AF%E7%94%B1%E4%B8%80%E4%B8%AARSS%E6%9D%A5%E7%BB%99%E5%87%BA%E7%9A%84%EF%BC%8C%E9%82%A3%E4%B9%88%E4%BD%95%E4%B8%8D%E4%BD%BF%E7%94%A8Google">http://www.brainyquote.com/link/quotefu.rss%E8%BF%99%E4%B8%AA%E5%9C%B0%E5%9D%80%EF%BC%8C%E8%BF%99%E4%B8%AA%E6%97%B6%E5%80%99%E5%BD%93%E4%BD%A0%E6%96%B0%E5%BB%BA%E4%B8%80%E4%B8%AA%E9%82%AE%E4%BB%B6%EF%BC%8C%E5%B0%B1%E4%BC%9A%E5%8F%91%E7%8E%B0%E6%9C%89%E7%AD%BE%E5%90%8D%E6%A1%A3%E9%9A%8F%E6%9C%BA%E6%8F%92%E5%85%A5%E5%88%B0%E9%82%AE%E4%BB%B6%E4%B8%AD%E3%80%82%E4%BD%86%E6%98%AF%E8%BF%99%E4%B8%AA%E5%B9%B6%E4%B8%8D%E6%98%AF%E6%88%91%E6%83%B3%E8%A6%81%E7%9A%84%E7%AD%BE%E5%90%8D%E6%A1%A3%EF%BC%8C%E6%88%91%E9%9C%80%E8%A6%81%E5%AE%83%E6%98%AF%E4%BB%8E%E6%88%91%E8%87%AA%E5%B7%B1%E7%9A%84%E7%AD%BE%E5%90%8D%E6%A1%A3%E5%88%97%E8%A1%A8%E4%B8%AD%E5%8E%BB%E6%89%BE%E3%80%82%E8%BF%99%E4%B8%AA%E5%8A%9F%E8%83%BD%E7%9A%84%E7%AD%BE%E5%90%8D%E6%A1%A3%E7%9A%84%E4%BF%A1%E6%81%AF%E6%98%AF%E7%94%B1%E4%B8%80%E4%B8%AARSS%E6%9D%A5%E7%BB%99%E5%87%BA%E7%9A%84%EF%BC%8C%E9%82%A3%E4%B9%88%E4%BD%95%E4%B8%8D%E4%BD%BF%E7%94%A8Google</a> App Engine来做一个自己的签名档管理的小系统，这样我可以加入自己新的签名档，然后还可以提供签名档的RSS给它呢？</p>

<p>说动手就动手吧，很快就完成了。<a href="http://liwb-quote.appspot.com/">http://liwb-quote.appspot.com/</a>。界面是抄twitter的，因为我的功能的确就是和它一样。我不得不说，在App Engine上面开发这样的应用的效率是惊人的。我很久没有动python了，App Engine的东西也是边看它的tutorial来完成的。但是我还是没有碰到太多的障碍就完成这些事情。看截图吧。</p>

<p><a href="http://liwb-quote.appspot.com/"><img src="http://liwenbing.cn/wp-content/uploads/2009/05/quote.png" alt="quote" /></a></p>

<p>然后再是提供RSS就可以了：<a href="http://liwb-quote.appspot.com/rss%E3%80%82">http://liwb-quote.appspot.com/rss%E3%80%82</a> 再将这个地址放到gmail中设置就可以了。嘿嘿，当你再新建一个邮件的时候，签名档就是你在appspot上面的自己的了。是不是很high呢？</p>

<p><strong>Conclusion</strong></p>

<p>App Egine来开发这样的应用的效率是极高的。无非是数据库的一些操作，开发、调试和上线的体验只有用过才知道是如何的high。</p>

<p>另外，Gmail中的<a href="http://groups.google.com/group/gmail-labs-help-random-signature">Random Signature</a>还是非常不成熟，它并不是实时地去拿我当前的记录。也不知道它多久抓一下，这点让人沮丧。</p>

<p><strong>Download</strong></p>

<p>这个是我的App Engine的工程，如果你管理自己的签名档或者类似一句话的东东，这个都可以用。</p>

<p><a href="http://liwenbing.cn/download/liwb-quote.zip"><strong>下载App Engine应用</strong></a></p>

<p>一些注意事项：</p>

<ol>
<li><p>下载后，修改app.yaml 文件中的application: 。</p></li>
<li><p>在main.py中需要把users.get_current_user().email()==&lsquo;<a href="&#x6d;&#x61;&#x69;&#108;&#x74;&#x6f;&#x3a;&#x77;&#x62;&#x69;&#110;&#x67;&#x6c;&#101;&#101;&#64;&#103;&#x6d;&#x61;&#x69;&#x6c;&#46;&#99;&#111;&#x6d;">&#119;&#98;&#105;&#x6e;&#103;&#x6c;&#101;&#x65;&#64;&#x67;&#109;&#97;&#105;&#108;&#x2e;&#x63;&#111;&#109;</a>'改成你自己的email，因为我让只有本人才有添加的能力，其他人只有浏览的权限。</p></li>
<li><p>然后appcfg.gy update 就好了。</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在Beijing OpenParty]]></title>
    <link href="http://wbinglee.com/blog/2009/04/25/at-beijing-openparty/"/>
    <updated>2009-04-25T16:17:38+00:00</updated>
    <id>http://wbinglee.com/blog/2009/04/25/at-beijing-openparty</id>
    <content type="html"><![CDATA[<p>今天是第二次参加<a href="http://www.beijing-open-party.org/">OpenParty</a>的活动了。<a href="http://www.beijing-open-party.org/index.php/2009/03/beijing-open-party-2009-03-sunny-spring-event-preparation.html">第一次</a>参加时联系好了，还以为过去时讲东东，结果情况也不是我们预料的那样，最后的情况不是我们所想的但是依然收获颇丰，知道了有这样一个社区，认识了很多有意思的人。</p>

<p><a href="http://www.beijing-open-party.org/index.php/2009/04/beijing-openparty-2009-04-serenade-to-spring-remind.html">这次</a>的活动更是精彩了，顺着QCon的风，请到了一些业界的大拿们到这里给大家讲些东西。周5的晚上还在和<a href="http://www.netvibes.com/shawnzhu">朱可</a>商量说，我们就不要讲了，这么多好的topic我们可以去听，就没有别要自讨没趣了。</p>

<p>听的第一个是<a href="http://www.douban.com/people/hongqn/">hongqn</a>谈douban的技术架构的发展，从douban最早的1.2M/D到23M/D所遇到的问题以及处理相应的解决办法。简单来说就是兵来将挡，水来土掩。非常敬佩他们对于技术的全面性，而现在我们每天只在实验室做点自己的那点事情，其实还是不了解一个真正运行的系统所涉及到的东西是如此的繁多和复杂。在听的时候，我一直在想这个问题，如果云计算足够的成熟，这些网站所面对的这些技术架构（主要是性能）上面的问题还会是一个如此巨大的问题吗？一个网站需要一个十几个人团队不断维护，这个太过于浪费。期待云计算的不断的成熟，也许那一天我们不需要让每个网站都需要经历这样一个技术架构上面的不断挑战。</p>

<p>第二个非常有用，来至解放军总医院的<a href="http://laiyaoshui.blog.sohu.com/">来要水</a>(别问我，名字的确很怪，我也想问，但是觉得不礼貌),讲了程序员颈椎治疗秘籍,:) .从里面的确学到很多有用的东西。完后帮我老爸（他颈椎非常严重)问了一些问题,学到很多，等搞到ppt了给老爸发过去，让他也好好学习一下。</p>

<p>下面听的就是周爱民讲软件架构，非常的high level，好处就是让你能够站在更高处去思考问题，问了很多问题，周老师也是耐心解答。每次我举手，周老师过来说,&ldquo;好，<strong>您</strong>有什么问题？“，呵呵，弄的我很紧张。发现他和老毛不是一个风格，大师们的共同点就是能够对问题深度思考并且抽象，不过老毛的交流风格是彪悍的，周老师的是温和的。坐在下面我在想，做小兵的感觉很不好，如果我在未来的十年还是做IT技术的话，那么我希望我至少能有一次和世界级大师像<em>Martin Fowler，__James Gosling</em>等 同台一起做技术讲座，如果你没有影响力，这是不成功的。</p>

<p>最后听了<a href="http://blog.csdn.net/zhmnsw/">糖醋鼻子</a>讲卡片机摄影，开始大家讨论了半天美学，修养的话题，呵呵。也学到了很多一些基本的技巧，对于我这样的摄影白痴很有帮助，收获很大。</p>

<p>总之，收获，收获很多。以后要继续参加这样的活动并且贡献自己的所学所想。BTW，我一定要去找公司印名片了，出去没有名片太丢人了。</p>

<p>附两张上次参加活动的图：</p>

<p>[gallery link=&ldquo;file&rdquo;]</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[I Am Still Alive]]></title>
    <link href="http://wbinglee.com/blog/2009/03/17/i-am-still-alive/"/>
    <updated>2009-03-17T17:45:35+00:00</updated>
    <id>http://wbinglee.com/blog/2009/03/17/i-am-still-alive</id>
    <content type="html"><![CDATA[<p>恩，我的确还活着。我快有3个月没有发一个新的文章了，草应该长的很深了，不过不要紧，冬天不怎么长草, :) 。那么我都在做些什么呢？我还是工作在<a href="http://www.projectzero.org">ProjectZero</a>上，现在project采用新的Agile的方式进行开发，适应也是学习的过程。准备在社区做更多的事情(article，seminar，speech&hellip;)，希望能有更多富有成效的合作，总之希望在09年会是一个有收获的一年。</p>

<p>另外一件值得提一提的事情就是，我的羽毛球技术大涨。自从每周六都要和研究生同学聚聚打2个小时的球，相互交流切磋，真是学到了不少。不过还是总是被ll以绝对优势赢，可以提高的地方还有很多。:)</p>

<p>还有，我现在住的地方人是越来越多。只从xg同学搬过来，生活简直又上升了一个档次了。一伙人可以喝点茶（我最爱普洱），可以看点书，可以聊点天，可以一起笑哈哈地看海绵宝宝或者喜羊羊，可以做点菜然后相互抬举或者相互鄙视之，可以一起研究如何养龟(到现在还木有看到龟吃东西，不知道这次是否能活过2个月），还可以一起打麻将&hellip; 而fr博士同学被我成功骗到了CRL，7月份入职后会更加的热闹一点。希望能租到一个大房子，4居or超大3居，或者复式的。总之，朋友要在一起才快乐。</p>

<p>春天来了，一切都应该不一样。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[你的website也social了吗？]]></title>
    <link href="http://wbinglee.com/blog/2008/12/11/diy-your-website-social/"/>
    <updated>2008-12-11T17:10:58+00:00</updated>
    <id>http://wbinglee.com/blog/2008/12/11/diy-your-website-social</id>
    <content type="html"><![CDATA[<p>如果你访问我的website，你可能注意到我的页面中多了两个小东西（我们一般叫gadget），通过它们，你可以加入我的website、看到所有的人、加他们为好友、或者可以留言。嘿嘿，看，我的website也成为social了哦。（一定要给面子加入到我的website，:),）。不过感觉比较遗憾的一点是，朋友之间不能相互地发message，是我漏点了什么吗？</p>

<p>这就是<a href="http://www.google.com/friendconnect/">Google Friend Connect</a>所提供的能力，你只需要copy/paste它提供的HTML到你的页面中就完事了。是不是很简单呢？</p>

<p>Google的确在兑现它的承诺，让所有的website都能容易加入social的能力，并且还是使用最基本的东西(HTML/Javscript)。年初的时候在讲什么OpenSocial，觉得挺玄乎的，并没有搞懂这个东西到底怎么折腾到我的website，也懒得去研究它。现在Friend Connect可以说是提供了一个平民化的social方式 - Copy/Paste HTML总会了吧， 2分钟搞定。</p>

<p>OpenSocial就是提供了一堆的API来帮助你构建你需要的Social能力。当然这个对于需要social能力的商业网站是可行，能力很强，干啥都可以。而Friend Connect就更进一步了，就是将OpenSocial的能力平民化。通过使用OpenSocial的API写相关的OpenSocial gadget，你就可以通过Copy/Paste的方式加入各种各样的gadget。Cool？YES.  当然Friend Connect另外提供了一些基本的login，管理的能力。</p>

<p>看看几个简单的OpenSocial的API (当然就是JavaScript的)：</p>

<ul>
<li><p><strong>API:</strong> <code>opensocial.DataRequest.newFetchPersonRequest('OWNER')</code>
<strong>Site Name:</strong> 李文兵的主页</p></li>
<li><p><strong>API:</strong> <code>opensocial.DataRequest.newFetchPeopleRequest('OWNER_FRIENDS')</code>
<strong>Site Members:。。。。</strong></p></li>
<li><p><strong>API:</strong> <code>opensocial.DataRequest.newFetchPeopleRequest('VIEWER_FRIENDS')</code>
<strong>Viewer friends:。。。</strong></p></li>
</ul>


<p>是不是很cool？你是不是也想抄起code写点东东,呵呵。 当然你也可以找些你喜欢的OpenSocial gadget来用就可以了。<a href="http://opensocialdirectory.org/">http://opensocialdirectory.org/</a>.</p>

<p>未来的mashup会怎么样呢？还有多少infrastructure的东西都被google给占了? 期待&amp;反思。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[实在是喜欢新版本Wordpress]]></title>
    <link href="http://wbinglee.com/blog/2008/12/11/love-wordpress-new-ui/"/>
    <updated>2008-12-11T15:31:13+00:00</updated>
    <id>http://wbinglee.com/blog/2008/12/11/love-wordpress-new-ui</id>
    <content type="html"><![CDATA[<p>Wordpress总是给我带来一些小小的惊喜，刚刚更新到2.7，居然有如此大的变化。</p>

<ul>
<li><p>超cool的界面，合理的布局，新的layout，适应各种resolution让我吃惊。不过以前的theme也挺爽的。有时候觉得wordpress就像美女一样，换肤就像换时装一样，需要时髦，嗯。</p></li>
<li><p>支持gears了。对我的使用上带来的好处还是非常大的</p></li>
<li><p>能够自动更新了。这点非常赞。以前总是提示你要upgrade，我总是要做一系列的事情。现在点个button就可以了。Love it!</p></li>
<li><p>导航条可以折叠，关键是缩起来超炫。</p></li>
<li><p>每个page的各个module(categories,tags&hellip;)都可以拖拽来调整位置。不过因人而异，默认位置就很好了。</p></li>
</ul>


<p>如何？一起来感受美妙软件带来快乐吧。</p>

<p><a href="http://liwenbing.cn/wp-content/uploads/2008/12/wordpress27.jpg"><img src="http://liwenbing.cn/wp-content/uploads/2008/12/wordpress27-300x216.jpg" alt="wordpress27" /></a></p>
]]></content>
  </entry>
  
</feed>

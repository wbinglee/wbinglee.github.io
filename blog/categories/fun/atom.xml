<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Fun | Wenbing Li]]></title>
  <link href="http://blog.wenbing.dev/blog/categories/fun/atom.xml" rel="self"/>
  <link href="http://blog.wenbing.dev/"/>
  <updated>2019-04-06T07:58:36-07:00</updated>
  <id>http://blog.wenbing.dev/</id>
  <author>
    <name><![CDATA[Wenbing Li]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[最近的一篇新的developerWorks文章 - 使用 Assemble Flow 开发简单协作流程]]></title>
    <link href="http://blog.wenbing.dev/blog/2009/05/14/new-article-in-developerworks/"/>
    <updated>2009-05-14T10:05:04-07:00</updated>
    <id>http://blog.wenbing.dev/blog/2009/05/14/new-article-in-developerworks</id>
    <content type="html"><![CDATA[<p>终于这篇文章在dWs上面发表出来了。
<a href="http://www.ibm.com/developerworks/cn/websphere/library/techarticles/0905_smash-assembleflow/">使用 Project Zero 和 WebSphere sMash Assemble Flow 构建 Mashup 应用，第 2 部分: 使用 Assemble Flow 开发简单协作流程</a></p>

<p>&ndash;文章摘要如下</p>

<p>在使用 WebSphere® sMash 中的 Assemble flow 来构建 Mashup 应用的<a href="http://www.ibm.com/developerworks/cn/web/wa-lo-pz-assembleflow1/">第 1 部分</a>中，我们介绍了 Assemble flow 的基本概念，以及如何使用 Assemble flow 来实现基于 Feed 的 Mashup 服务。本文中，我们将向您介绍如何使用 Assemble flow 来开发简单的协作流程。</p>

<p>&ndash;文章目录如下:</p>

<p><a href="http://www.ibm.com/developerworks/cn/websphere/library/techarticles/0905_smash-assembleflow/#">本文内容包括：</a></p>

<p><img src="http://www.ibm.com/i/v14/t/cl-bullet.gif" alt="" /></p>

<p><a href="http://www.ibm.com/developerworks/cn/websphere/library/techarticles/0905_smash-assembleflow/#N10110">引言</a></p>

<p><img src="http://www.ibm.com/i/v14/t/cl-bullet.gif" alt="" /></p>

<p><a href="http://www.ibm.com/developerworks/cn/websphere/library/techarticles/0905_smash-assembleflow/#N10142">开始之前</a></p>

<p><img src="http://www.ibm.com/i/v14/t/cl-bullet.gif" alt="" /></p>

<p><a href="http://www.ibm.com/developerworks/cn/websphere/library/techarticles/0905_smash-assembleflow/#N1016A">在Assemble flow中访问REST资源和服务</a></p>

<p><img src="http://www.ibm.com/i/v14/t/cl-bullet.gif" alt="" /></p>

<p><a href="http://www.ibm.com/developerworks/cn/websphere/library/techarticles/0905_smash-assembleflow/#N1021D">面向 REST 的流程接口</a></p>

<p><img src="http://www.ibm.com/i/v14/t/cl-bullet.gif" alt="" /></p>

<p><a href="http://www.ibm.com/developerworks/cn/websphere/library/techarticles/0905_smash-assembleflow/#N103BE">使用 REST 风格实现流程会话</a></p>

<p><img src="http://www.ibm.com/i/v14/t/cl-bullet.gif" alt="" /></p>

<p><a href="http://www.ibm.com/developerworks/cn/websphere/library/techarticles/0905_smash-assembleflow/#N10425">简单人工协作流程</a></p>

<p><img src="http://www.ibm.com/i/v14/t/cl-bullet.gif" alt="" /></p>

<p><a href="http://www.ibm.com/developerworks/cn/websphere/library/techarticles/0905_smash-assembleflow/#N10443">webUI 活动</a></p>

<p><img src="http://www.ibm.com/i/v14/t/cl-bullet.gif" alt="" /></p>

<p><a href="http://www.ibm.com/developerworks/cn/websphere/library/techarticles/0905_smash-assembleflow/#N104DE">使用 webUI 活动构建人工协作流程</a></p>

<p><img src="http://www.ibm.com/i/v14/t/cl-bullet.gif" alt="" /></p>

<p><a href="http://www.ibm.com/developerworks/cn/websphere/library/techarticles/0905_smash-assembleflow/#N10650">配置 sMash 应用程序</a></p>

<p><img src="http://www.ibm.com/i/v14/t/cl-bullet.gif" alt="" /></p>

<p><a href="http://www.ibm.com/developerworks/cn/websphere/library/techarticles/0905_smash-assembleflow/#N106F8">结束语</a></p>

<p><img src="http://www.ibm.com/i/v14/t/cl-bullet.gif" alt="" /></p>

<p><a href="http://www.ibm.com/developerworks/cn/websphere/library/techarticles/0905_smash-assembleflow/#download">下载</a></p>

<p><img src="http://www.ibm.com/i/v14/t/cl-bullet.gif" alt="" /></p>

<p><a href="http://www.ibm.com/developerworks/cn/websphere/library/techarticles/0905_smash-assembleflow/#resources">参考资料 </a></p>

<p><img src="http://www.ibm.com/i/v14/t/cl-bullet.gif" alt="" /></p>

<p><a href="http://www.ibm.com/developerworks/cn/websphere/library/techarticles/0905_smash-assembleflow/#author">作者简介</a></p>

<p><img src="http://www.ibm.com/i/v14/t/cl-bullet.gif" alt="" /></p>

<p><a href="http://www.ibm.com/developerworks/cn/websphere/library/techarticles/0905_smash-assembleflow/#rate">对本文的评价</a></p>

<p>&ndash;另外，发了另外两个blog在projectzero的中文博客上面；</p>

<ul>
<li><p><a href="http://www.projectzero.org/cblog/index.php/2009/05/14/article-at-developerworks-assemble-flow-collaboration/">developerWorks文章：使用 Assemble Flow 开发简单协作流程</a></p></li>
<li><p><a href="http://www.projectzero.org/cblog/index.php/2009/05/14/community-event-bpm-tt-workflow/">在TechTarget中国中的BPM活动</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Enable Gmail Random Signature Using Google App Engine]]></title>
    <link href="http://blog.wenbing.dev/blog/2009/04/30/enable-gmail-random-signature-using-google-app-engine/"/>
    <updated>2009-04-30T14:21:52-07:00</updated>
    <id>http://blog.wenbing.dev/blog/2009/04/30/enable-gmail-random-signature-using-google-app-engine</id>
    <content type="html"><![CDATA[<p>在GMail的Lab中有这样的一个小东西，它可以随机地加入签名档到你的邮件中。这个一直是我想要的，于是在五一无聊的时候试试。</p>

<p>首先当然是要到GMail的Lab中enable这个功能了。</p>

<p><a href="http://liwenbing.cn/2009/05/01/enable-gmail-random-signature-using-google-app-engine/enable1/"><img src="http://liwenbing.cn/wp-content/uploads/2009/05/enable1.png" alt="enable1" /></a></p>

<p>这个时候到Setting->General中的Signature中会多出这么一个东西，</p>

<p><a href="http://liwenbing.cn/wp-content/uploads/2009/05/setting.png"><img src="http://liwenbing.cn/wp-content/uploads/2009/05/setting.png" alt="setting" /></a></p>

<p>默认是<a href="http://www.brainyquote.com/link/quotefu.rss%E8%BF%99%E4%B8%AA%E5%9C%B0%E5%9D%80%EF%BC%8C%E8%BF%99%E4%B8%AA%E6%97%B6%E5%80%99%E5%BD%93%E4%BD%A0%E6%96%B0%E5%BB%BA%E4%B8%80%E4%B8%AA%E9%82%AE%E4%BB%B6%EF%BC%8C%E5%B0%B1%E4%BC%9A%E5%8F%91%E7%8E%B0%E6%9C%89%E7%AD%BE%E5%90%8D%E6%A1%A3%E9%9A%8F%E6%9C%BA%E6%8F%92%E5%85%A5%E5%88%B0%E9%82%AE%E4%BB%B6%E4%B8%AD%E3%80%82%E4%BD%86%E6%98%AF%E8%BF%99%E4%B8%AA%E5%B9%B6%E4%B8%8D%E6%98%AF%E6%88%91%E6%83%B3%E8%A6%81%E7%9A%84%E7%AD%BE%E5%90%8D%E6%A1%A3%EF%BC%8C%E6%88%91%E9%9C%80%E8%A6%81%E5%AE%83%E6%98%AF%E4%BB%8E%E6%88%91%E8%87%AA%E5%B7%B1%E7%9A%84%E7%AD%BE%E5%90%8D%E6%A1%A3%E5%88%97%E8%A1%A8%E4%B8%AD%E5%8E%BB%E6%89%BE%E3%80%82%E8%BF%99%E4%B8%AA%E5%8A%9F%E8%83%BD%E7%9A%84%E7%AD%BE%E5%90%8D%E6%A1%A3%E7%9A%84%E4%BF%A1%E6%81%AF%E6%98%AF%E7%94%B1%E4%B8%80%E4%B8%AARSS%E6%9D%A5%E7%BB%99%E5%87%BA%E7%9A%84%EF%BC%8C%E9%82%A3%E4%B9%88%E4%BD%95%E4%B8%8D%E4%BD%BF%E7%94%A8Google">http://www.brainyquote.com/link/quotefu.rss%E8%BF%99%E4%B8%AA%E5%9C%B0%E5%9D%80%EF%BC%8C%E8%BF%99%E4%B8%AA%E6%97%B6%E5%80%99%E5%BD%93%E4%BD%A0%E6%96%B0%E5%BB%BA%E4%B8%80%E4%B8%AA%E9%82%AE%E4%BB%B6%EF%BC%8C%E5%B0%B1%E4%BC%9A%E5%8F%91%E7%8E%B0%E6%9C%89%E7%AD%BE%E5%90%8D%E6%A1%A3%E9%9A%8F%E6%9C%BA%E6%8F%92%E5%85%A5%E5%88%B0%E9%82%AE%E4%BB%B6%E4%B8%AD%E3%80%82%E4%BD%86%E6%98%AF%E8%BF%99%E4%B8%AA%E5%B9%B6%E4%B8%8D%E6%98%AF%E6%88%91%E6%83%B3%E8%A6%81%E7%9A%84%E7%AD%BE%E5%90%8D%E6%A1%A3%EF%BC%8C%E6%88%91%E9%9C%80%E8%A6%81%E5%AE%83%E6%98%AF%E4%BB%8E%E6%88%91%E8%87%AA%E5%B7%B1%E7%9A%84%E7%AD%BE%E5%90%8D%E6%A1%A3%E5%88%97%E8%A1%A8%E4%B8%AD%E5%8E%BB%E6%89%BE%E3%80%82%E8%BF%99%E4%B8%AA%E5%8A%9F%E8%83%BD%E7%9A%84%E7%AD%BE%E5%90%8D%E6%A1%A3%E7%9A%84%E4%BF%A1%E6%81%AF%E6%98%AF%E7%94%B1%E4%B8%80%E4%B8%AARSS%E6%9D%A5%E7%BB%99%E5%87%BA%E7%9A%84%EF%BC%8C%E9%82%A3%E4%B9%88%E4%BD%95%E4%B8%8D%E4%BD%BF%E7%94%A8Google</a> App Engine来做一个自己的签名档管理的小系统，这样我可以加入自己新的签名档，然后还可以提供签名档的RSS给它呢？</p>

<p>说动手就动手吧，很快就完成了。<a href="http://liwb-quote.appspot.com/">http://liwb-quote.appspot.com/</a>。界面是抄twitter的，因为我的功能的确就是和它一样。我不得不说，在App Engine上面开发这样的应用的效率是惊人的。我很久没有动python了，App Engine的东西也是边看它的tutorial来完成的。但是我还是没有碰到太多的障碍就完成这些事情。看截图吧。</p>

<p><a href="http://liwb-quote.appspot.com/"><img src="http://liwenbing.cn/wp-content/uploads/2009/05/quote.png" alt="quote" /></a></p>

<p>然后再是提供RSS就可以了：<a href="http://liwb-quote.appspot.com/rss%E3%80%82">http://liwb-quote.appspot.com/rss%E3%80%82</a> 再将这个地址放到gmail中设置就可以了。嘿嘿，当你再新建一个邮件的时候，签名档就是你在appspot上面的自己的了。是不是很high呢？</p>

<p><strong>Conclusion</strong></p>

<p>App Egine来开发这样的应用的效率是极高的。无非是数据库的一些操作，开发、调试和上线的体验只有用过才知道是如何的high。</p>

<p>另外，Gmail中的<a href="http://groups.google.com/group/gmail-labs-help-random-signature">Random Signature</a>还是非常不成熟，它并不是实时地去拿我当前的记录。也不知道它多久抓一下，这点让人沮丧。</p>

<p><strong>Download</strong></p>

<p>这个是我的App Engine的工程，如果你管理自己的签名档或者类似一句话的东东，这个都可以用。</p>

<p><a href="http://liwenbing.cn/download/liwb-quote.zip"><strong>下载App Engine应用</strong></a></p>

<p>一些注意事项：</p>

<ol>
<li><p>下载后，修改app.yaml 文件中的application: 。</p></li>
<li><p>在main.py中需要把users.get_current_user().email()==&lsquo;<a href="&#x6d;&#97;&#105;&#108;&#x74;&#111;&#58;&#119;&#98;&#x69;&#x6e;&#103;&#x6c;&#x65;&#x65;&#64;&#103;&#109;&#97;&#x69;&#x6c;&#46;&#x63;&#x6f;&#x6d;">&#119;&#98;&#105;&#x6e;&#103;&#108;&#101;&#101;&#64;&#103;&#x6d;&#97;&#105;&#108;&#46;&#x63;&#x6f;&#109;</a>'改成你自己的email，因为我让只有本人才有添加的能力，其他人只有浏览的权限。</p></li>
<li><p>然后appcfg.gy update 就好了。</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Happy Time With Mac]]></title>
    <link href="http://blog.wenbing.dev/blog/2008/11/06/happy-time-with-mac/"/>
    <updated>2008-11-06T03:57:08-08:00</updated>
    <id>http://blog.wenbing.dev/blog/2008/11/06/happy-time-with-mac</id>
    <content type="html"><![CDATA[<p>最近一直在我的mac机上折腾，简直是越来越喜欢这个小东西了。装了各种各样的软件，就是乐在其中呀。今天还down了vmware fusion.公司也有各种的虚拟机文件可以down。于是一不小心就下了Redhat，WinXP，Vista。看来以后做什么事情都可以在mac上了。</p>

<p>show一下变态的界面。</p>

<p><a href="http://liwenbing.cn/wp-content/uploads/2008/11/e59bbee78987-1.png"><img src="http://liwenbing.cn/wp-content/uploads/2008/11/e59bbee78987-1-300x187.png" alt="" /></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Aptana Jaxer:The Ajax Server?]]></title>
    <link href="http://blog.wenbing.dev/blog/2008/06/13/aptana-jaxer-the-ajax-server/"/>
    <updated>2008-06-13T09:04:22-07:00</updated>
    <id>http://blog.wenbing.dev/blog/2008/06/13/aptana-jaxer-the-ajax-server</id>
    <content type="html"><![CDATA[<p>一直以来都在用Aptana的Editor来编辑Javascript/CSS/HTML,都挺好。今天尝试了Aptana自己一直在推的所谓‘世界上第一个Ajax Server的<a href="http://aptana.com/jaxer">Jaxer</a>。</p>

<p>在Jaxar里面写code倒是很有意思，所有你需要做的事情就是写Javascript/CSS/HTML。你根本不需要使用任何其他server-side语言,所有的事情就是写Javascript就可以了。来看一个例子：</p>

<pre><code>&lt;code&gt;
 &lt;script type="text/javascript" runat="server"&gt;
    function getAuthenticatedUser()
    {
        var username = Jaxer.session.get("username");
        if (typeof username == "undefined") return null;
        var rs = Jaxer.DB.execute("SELECT * FROM users WHERE username = ?", [username]);
        if (rs.rows.length == 0)
        {
            return null;
        }
        return rs.rows[0];
    }
&lt;/script&gt;
&lt;/code&gt;
</code></pre>

<p>用‘runat=server’就可以让上面对数据库的操作运行在server端，而client端对该方法的调用不变，这样在写Web应用时就不用在Server side和client side两边跑来跑去了。并且还有对template的支持。</p>

<p>这个和原来老毛和科长做的project zero client programming model是非常相似的，目的是都用来屏蔽client和server之间的boundary。不过Jaxar做的更加彻底，通过扩展Apache的server，加入自己的Server side framework和client side framework，让所有的一切都通过写JS就搞定了。并且对session，database, web ,SMTP 进行支持，对于一般的应用差不多就够了。老毛原来做的也是通过加入client framework以及扩展server的一些能力来让开发者在client和server之间进行无缝交互。可惜还是需要写Javascript和groovy，并且有一大堆的convention，不知道为什么没有发展下去（又是政治问题?).</p>

<p>那么这种开发模式到底好不好呢？我觉得对于比较小的应用，不考虑扩展和与外界交互，还是一个比较快捷的开发方式。毕竟client和server的无缝交互所带来的好处是非常大的，比如说学习的门槛低（只需要知道一个Javascript就搞定了), 数据传输中麻烦的异步调用，编码，解码，格式转换等等都将消失。但是一旦你的web应用大一些的时候，我想这种模式就面临着很大的问题。关键还是不容易扩展，当它把UI和数据逻辑混合的时候，要做分离是比较困难的。当然你可以在它的编程模型上写一层数据操作层，但是这样就变成了典型的RPC了。另外，这样做并不<a href="http://en.wikipedia.org/wiki/Representational_State_Transfer">REST</a>,Jaxer开发出来的应用根本提供不了service(更谈不上RESTful)，这样就无法被它人所用了。如果Jaxer应用以后要做整合，那绝对是一个大麻烦。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Did You Know?]]></title>
    <link href="http://blog.wenbing.dev/blog/2008/05/13/did-you-know/"/>
    <updated>2008-05-13T09:41:38-07:00</updated>
    <id>http://blog.wenbing.dev/blog/2008/05/13/did-you-know</id>
    <content type="html"><![CDATA[<p>很有意思的video。
&ndash;quote&ndash;
In 10 years it is predicted that the number one Enlish speaking country in the world will be China.</p>
]]></content>
  </entry>
  
</feed>
